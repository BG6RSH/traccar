# GCJ02坐标系适配版Traccar server

---
# 定义工作流的名称
name: Build and push docker images

# 设置环境变量
env:
  DOCKERHUB_REPOSITORY: bg6rsh/traccar-amap

# 定义工作流触发条件
on:
  push:
    branches:
      - amap
      - [0-9]+.[0-9]+

# 设置默认配置
defaults:
  run:
    shell: bash

# 定义工作流中的作业
jobs:
  docker-build-push:
    # 作业名称
    name: Build and push docker images
    # 运行作业的虚拟环境
    runs-on: ubuntu-22.04
    # 定义矩阵策略
    strategy:
      matrix:
        os: [alpine, debian, ubuntu]
    # 作业步骤
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Dockerfile existence
        run: |
          if [ ! -f Dockerfile.${{ matrix.os }} ]; then
            echo "Error: Dockerfile.${{ matrix.os }} does not exist."
            exit 1
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set environment DOCKERHUB_IMAGE_TAGS
        run: |
          _BRANCH=${GITHUB_REF##*/}
          _VERSION=$(echo "$_BRANCH" | sed -E 's/^v?([0-9]+\.[0-9]+(\.[0-9]+)?).*$/\1/')
          _MAJOR_VERSION=$(echo "$_VERSION" | cut -d. -f1)
          
          # 验证版本格式是否合法
          if [[ ! "$_VERSION" =~ ^[0-9]+\.[0-9]+ ]]; then
            echo "Invalid version format: $_VERSION"
            exit 1
          fi

          _DOCKERHUB_IMAGE_TAGS="$DOCKERHUB_REPOSITORY:$_VERSION-${{ matrix.os }}"
          _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:$_MAJOR_VERSION-${{ matrix.os }}"
          _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:${{ matrix.os }}"

          if [ "${{ matrix.os }}" == "alpine" ] || [ "$_BRANCH" == "amap" ]; then
            _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:$_VERSION"
            _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:$_MAJOR_VERSION"
          fi

          if [ "$_BRANCH" == "amap" ]; then
            _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:latest-${{ matrix.os }}"
            if [ "${{ matrix.os }}" == "alpine" ]; then
              _DOCKERHUB_IMAGE_TAGS+=",$DOCKERHUB_REPOSITORY:latest"
            fi
          fi

          echo "DOCKERHUB_IMAGE_TAGS=$_DOCKERHUB_IMAGE_TAGS" >> $GITHUB_ENV

      - name: Set environment DOCKERHUB_IMAGE_PLATFORMS
        run: |
          _DOCKERHUB_IMAGE_PLATFORMS="linux/amd64,linux/arm64"
          if [ "${{ matrix.os }}" == "ubuntu" ]; then
            _DOCKERHUB_IMAGE_PLATFORMS+=",linux/arm/v7"
          fi
          echo "DOCKERHUB_IMAGE_PLATFORMS=$_DOCKERHUB_IMAGE_PLATFORMS" >> $GITHUB_ENV

      - name: Build and push
        if: env.DOCKERHUB_IMAGE_TAGS != ''
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.${{ matrix.os }}
          tags: ${{ env.DOCKERHUB_IMAGE_TAGS }}
          platforms: ${{ env.DOCKERHUB_IMAGE_PLATFORMS }}
